import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt

# Total population, N.
N = 10
A0,B0,I0,O0,M0= 1,0,0,0,0
# Everyone else, S0, is susceptible to infection initially.

S0 = N - I0 - A0-B0-O0-M0
# Contact rate, beta, and mean recovery rate, gamma, (in 1/days).
ab,g,ga,d,db1,db2,e,ei1,ei2 =2.4,0.89,1,0.06,0.9,0.1,0.05,0.1,0.9

# A grid of time points (in days)
t = np.linspace(0, 10)

# The SIR model differential equations.
def deriv(y, t, N, ab,g,ga,d,db1,db2,e,ei1,ei2):
    A,B,I,O,M,S = y
    #dHdt =(beta * S * (A+B+I) / N)# - (g*A+d*B+e*I) (<--Don't get why this would be here)
                   #(add +B+I to simulate no interventions so people can visit hospitals)
    dAdt = +(S*ab*g* (A)) -(A*ga)
    dBdt = +(S*d*ab *(A))-(B*db1)-(B*db2)
    dIdt = +(S*e*ab *(A))-(I*ei1)-(I*ei2)
    dOdt =(A*ga)+(B*db1)+(I*ei1)
    dMdt =(B*db2)+(I*ei2)
    dSdt = -(ab* S * (A+B+I))/ N
    return dAdt, dBdt, dIdt,dOdt, dMdt, dSdt

# Initial conditions vector
y0 = A0,B0,I0,O0,M0,S0
# Integrate the SIR equations over the time grid, t.
ret = odeint(deriv, y0, t, args=(N, ab,g,ga,d,db1,db2,e,ei1,ei2))
A,B,I,O,M,S = ret.T
print(A,B,I,O,M,S)
# Plot the data on three separate curves for S(t), I(t) and R(t)
fig = plt.figure(facecolor='w')
ax = fig.add_subplot(111, axisbelow=True)
ax.plot(t, A/1000, alpha=0.5, lw=2, label='Asimptomatic')
ax.plot(t, B/1000, alpha=0.5, lw=2, label='Hospital')
ax.plot(t, I/1000, alpha=0.5, lw=2, label='icu')
ax.plot(t, O/1000, alpha=0.5, lw=2, label='healthy')
ax.plot(t, M/1000, alpha=0.5, lw=2, label='dead')
ax.plot(t, S/1000, alpha=0.5, lw=2, label='suceptible')
ax.set_xlabel('Time /days')
ax.set_ylabel('Number (1000s)')
#ax.set_ylim(0,1.2)
ax.yaxis.set_tick_params(length=0)
ax.xaxis.set_tick_params(length=0)
ax.grid(b=True, which='major', c='w', lw=2, ls='-')
legend = ax.legend()
legend.get_frame().set_alpha(0.5)
for spine in ('top', 'right', 'bottom', 'left'):
    ax.spines[spine].set_visible(False)
plt.show()
