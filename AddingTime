import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt


N = 10000

A0=[100]
B0=[0]
I0=[0]
O0=[0]
M0=[0]
S0 = [9000]
# Contact rate, beta, and mean recovery rate, gamma, (in 1/days).
ab,g,ga,d,db1,db2,e,ei1,ei2 =0.5,0.9,0.45,0.55,0.27,0.005,0.55,0.27,0.005
z=100
r=z
# A grid of time points (in days)
x = np.linspace(0,2, num=2)

# The SIR model differential equations.
def deriv(y, x, N, ab,g,ga,d,db1,db2,e,ei1,ei2):
    A,B,I,O,M,S = y
    dAdt = +(((S*ab* A)/N)*g) -(A*ga)#
    dBdt = +(((S*ab *A)/N)*d)-(B*db1)-(B*db2)#
    dIdt = +(((S*ab *A)/N)*e)-(I*ei1)-(I*ei2)#
    dOdt =+(A*ga)+(B*db1)+(I*ei1)
    dMdt =+(B*db2)+(I*ei2)
    dSdt = -((S*ab*g* A)/N)-((S*d*ab *A)/N)-((S*e*ab *A)/N)
    return dAdt, dBdt, dIdt,dOdt, dMdt, dSdt
while z>0:
# Initial conditions vector
    y0 = A0[-1],B0[-1],I0[-1],O0[-1],M0[-1],S0[-1]
# Integrate the SIR equations over the time grid, t.
    ret = odeint(deriv, y0, x, args=(N, ab,g,ga,d,db1,db2,e,ei1,ei2))

    A0.append(A0[-1]+ret.T[0][1])
    B0.append(B0[-1]+ret.T[1][1])
    I0.append(I0[-1]+ret.T[2][1])
    O0.append(O0[-1]+ret.T[3][1])
    M0.append(M0[-1]+ret.T[4][1])
    S0.append(S0[-1]+ret.T[5][1])
    z-=1
print(A0)
t = np.linspace(0, r, num=101)
print(t)
# Plot the data on three separate curves for S(t), I(t) and R(t)
fig = plt.figure(facecolor='w')
ax = fig.add_subplot(111, axisbelow=True)
ax.plot(t, A0, alpha=0.5, lw=2, label='asimp')
ax.plot(t, B0, alpha=0.5, lw=2, label='bolnica')
ax.plot(t, I0, alpha=0.5, lw=2, label='icu')
ax.plot(t, O0, alpha=0.5, lw=2, label='ozdraveli')
ax.plot(t, M0, alpha=0.5, lw=2, label='umrlid')
ax.plot(t, S0, alpha=0.5, lw=2, label='ostali')
ax.set_xlabel('Time /days')
ax.set_ylabel('Number (1000s)')
ax.set_ylim(0,1.2)
ax.yaxis.set_tick_params(length=0)
ax.xaxis.set_tick_params(length=0)
ax.grid(b=True, which='major', c='w', lw=2, ls='-')
legend = ax.legend()
legend.get_frame().set_alpha(0.5)
for spine in ('top', 'right', 'bottom', 'left'):
    ax.spines[spine].set_visible(False)
plt.show()
